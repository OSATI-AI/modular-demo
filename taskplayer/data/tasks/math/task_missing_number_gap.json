{
  "task_id": "task_missing_number_gap",
  "template_id": "template_question_answer",
  "title": {
    "english": "Missing Number (Gap)",
    "german": "Fehlende Zahl (Lücke)"
  },
  "description": {
    "english": "The student sees a sequence of numbers that increase by 1 from left to right. One of the numbers is blanked out. The student has to fill in the missing number by checking the number on the left and on the right (or only the left and only the right if the missing number is the first or last number).",
    "german": "Der Schüler sieht eine Zahlenfolge, die von links nach rechts um 1 zunimmt. Eine der Zahlen ist ausgeblendet. Der Schüler muss die fehlende Zahl einfügen, indem er die Zahl links und rechts prüft (oder nur links und nur rechts, wenn die fehlende Zahl die erste oder letzte Zahl ist)."
  },
  "topic_id": 15,
  "events": {
    "send": ["evaluationResult", "task_details", "task_loaded"],
    "receive": ["evaluate", "refresh", "get_task_details"]
  },
  "text": {
    "text_question": {
      "english": "Fill in the gap with the correct number.",
      "german": "Fülle die Lücke mit der richtigen Zahl."
    }
  },
  "script": "let answer, sequence;\n\n// Create the layout using the template's method\n// Note: imagePlaceholder is not used in this task and will remain unchanged\nconst { questionElement, imagePlaceholder, answerElement } = playerApi.callTemplateScript('createLayout', {});\n\n// Function to generate the exercise\nfunction generateExercise() {\n  sequence = [];\n  const start = Math.floor(Math.random() * 90) + 1;\n  const missingIdx = Math.floor(Math.random() * 10);\n\n  let seqString = \"\";\n  for (let i = 0; i < 10; i++) {\n    const number = start + i;\n    if (i === missingIdx) {\n      answer = number;\n      seqString += \"\\\\placeholder[answer]{}\";\n      sequence.push(\"???\");\n    } else {\n      seqString += number;\n      sequence.push(number.toString());\n    }\n    if (i < 9) {\n      seqString += \",\";\n    }\n  }\n\n  // Set the question text using the variable\n  questionElement.innerHTML = \"{{text_question}}\";\n questionElement.setAttribute('text_map', 'text_question');  \n  // Create and configure the answer field\n  const answerField = document.createElement(\"math-field\");\n  answerField.id = \"answer_field\";\n  answerField.setValue(seqString);\n  answerField.mathVirtualKeyboardPolicy = \"manual\";\n  answerField.readonly = true;\n\n  // Append the answer field to the answer element\n  answerElement.append(answerField);\n\n  // Send a task loaded event\n  playerApi.sendEvent('task_loaded', {});\n}\n\n// Function to initialize event listeners\nfunction init() {\n  // Listener for getting task details\n  playerApi.receiveEvent('get_task_details', function() {\n    const taskDetails = playerApi.getTaskDetails();\n    const dynamicDetails = `The displayed sequence is ${sequence}. Therefore, the correct number that fills the gap is ${answer}.`;\n    playerApi.sendEvent('task_details', {\n      staticInfo: taskDetails.description,\n      dynamicDetails: dynamicDetails\n    });\n  });\n\n  // Listener for evaluating the task\n  playerApi.receiveEvent('evaluate', function() {\n    const userAnswer = parseInt(document.getElementById(\"answer_field\").getPromptValue('answer'), 10);\n    const isCorrect = userAnswer === answer;\n    playerApi.sendEvent('evaluationResult', { userAnswer, answer, isCorrect });\n  });\n\n  // Listener for refreshing the task\n  playerApi.receiveEvent('refresh', function() {\n    answerElement.innerHTML = '';\n    generateExercise();\n  });\n}\n\n// Initialize and generate the exercise\ninit();\ngenerateExercise();"
}
