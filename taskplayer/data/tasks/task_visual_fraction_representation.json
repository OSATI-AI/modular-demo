{"title": {"english": "Recognize fractions in images", "german": "Br√ºche in Bilder erkennen"}, "description": {"english": "The student has to identify the fraction represented by the highlighted parts in a visual representation.", "german": "Der Sch\u00fcler muss den Bruch angeben, der durch die hervorgehobenen Teile in einer visuellen Darstellung dargestellt wird."}, "task_id": "task_visual_fraction_representation", "template_id": "template_fraction_input", "events": {"send": ["evaluationResult", "task_details", "task_loaded"], "receive": ["evaluate", "refresh", "get_task_details"]}, "text": {"text_question": {"english": "Please enter the fraction represented by the highlighted parts.", "german": "Bitte gib den Bruch an, der durch die hervorgehobenen Teile dargestellt wird."}}, "script": "let correctAnswers, numerator, denominator;\n\n// Call the template's createLayout method to initialize the layout\nconst { questionElement, imagePlaceholder, numeratorInput, denominatorInput } = playerApi.callTemplateScript('createLayout', {});\n\n// Function to generate a random fraction and set the visual representation\nfunction generateExercise() {\n  denominator = Math.floor(Math.random() * 8) + 3; // Random denominator between 3 and 10\n  numerator = Math.floor(Math.random() * (denominator - 1)) + 1; // Random numerator between 1 and (denominator-1)\n\n  // Set the correct answers for evaluation\n  correctAnswers = {\n    'numerator': [numerator.toString()],\n    'denominator': [denominator.toString()]\n  };\n\n  // Set the question text\n  questionElement.innerHTML = `<p>{{text_question}}</p>`;\n\n  // Clear the input fields\n  numeratorInput.value = '';\n  denominatorInput.value = '';\n\n  // Draw the visual representation of the fraction\n  draw_fraction('image_placeholder', 'rectangle', denominator, numerator);\n\n  // Send event indicating the task is loaded\n  playerApi.sendEvent('task_loaded', {});\n}\n\n// Function to normalize user answers for comparison\nfunction normalizeAnswer(answer) {\n  return answer.trim().toLowerCase();\n}\n\n// Initialization function\nfunction init() {\n  // Handle event to get task details\n  playerApi.receiveEvent('get_task_details', function() {\n    const taskDetails = playerApi.getTaskDetails();\n    const dynamicDetails = `The task requires identifying the fraction represented by the visual elements. The correct answer is ${numerator}/${denominator}.`;\n    playerApi.sendEvent('task_details', {\n      staticInfo: taskDetails.description,\n      dynamicDetails: dynamicDetails\n    });\n  });\n\n  // Handle evaluation event\n  playerApi.receiveEvent('evaluate', function() {\n    const userAnswers = {\n      'numerator': normalizeAnswer(numeratorInput.value),\n      'denominator': normalizeAnswer(denominatorInput.value)\n    };\n    const isCorrect = Object.keys(correctAnswers).every(key => {\n      return correctAnswers[key].includes(userAnswers[key]);\n    });\n    playerApi.sendEvent('evaluationResult', { userAnswers, correctAnswers, isCorrect });\n  });\n\n  // Handle refresh event\n  playerApi.receiveEvent('refresh', function() {\n    generateExercise();\n  });\n}\n\n// Initialize and generate the first exercise\ninit();\ngenerateExercise();", "topic_id": 16, "external_scripts": ["script_3.js"]}