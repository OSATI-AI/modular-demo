{
  "template_id": "template_memory",
  "title": "Memory Game Template",
  "description": "A template for displaying memory game cards in a grid layout.",
  "example_task": "task_memory_example",
  "events": {
    "send": ["found_pair"],
    "receive": []
  },
  "html": "<div class='template_container'>\n  <div id='question_element' class='question-element'></div>\n  <div class='memory-grid' id='memory-grid'></div>\n</div>",
  "styles": ".template_container {\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  height: 100%;\n  width: 100%;\n  box-sizing: border-box;\n}\n.question-element {\n  margin-bottom: 20px;\n  font-size: 18px;\n}\n.memory-grid {\n  display: grid;\n  grid-template-columns: repeat(4, 100px);\n  gap: 10px;\n  justify-content: center;\n}\n.memory-card {\n  width: 100px;\n  height: 100px;\n  background-color: blue;\n  border-radius: 8px;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  color: white;\n  font-size: 24px;\n  cursor: pointer;\n  position: relative;\n  transform-style: preserve-3d;\n  transition: transform 0.6s;\n}\n.memory-card-inner {\n  position: absolute;\n  width: 100%;\n  height: 100%;\n  backface-visibility: hidden;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n}\n.memory-card-front {\n  background-color: blue;\n}\n.memory-card-back {\n  background-color: white;\n  color: black;\n  transform: rotateY(180deg);\n}\n.memory-card.flipped {\n  transform: rotateY(180deg);\n}\n.memory-card.matched .memory-card-back {\n  background-color: lightgreen;\n}",
  "scripts": "function createLayout(details) {\n  const { list1, list2 } = details;\n  console.log(list1, list2);\n  const questionElement = document.getElementById('question_element');\n  const elements = [...list1.map((el, idx) => ({ value: el, index: idx })), ...list2.map((el, idx) => ({ value: el, index: idx }))];\n  elements.sort(() => 0.5 - Math.random());\n  const memoryGrid = document.getElementById('memory-grid');\n  memoryGrid.innerHTML = '';\n  for (let i = 0; i < elements.length; i++) {\n    const card = document.createElement('div');\n    card.classList.add('memory-card');\n    card.innerHTML = `\n      <div class='memory-card-inner memory-card-front'>?</div>\n      <div class='memory-card-inner memory-card-back'>${elements[i].value}</div>\n    `;\n    card.dataset.index = elements[i].index;\n    card.addEventListener('click', () => flipCard(card));\n    memoryGrid.appendChild(card);\n  }\n  return { questionElement, memoryGrid };\n}\n\nlet flippedCards = [];\nlet disableClick = false;\n\n// Function to flip a card and check for matches\nfunction flipCard(card) {\n  if (disableClick || card.classList.contains('flipped')) return;\n  card.classList.add('flipped');\n  flippedCards.push(card);\n  if (flippedCards.length === 2) {\n    disableClick = true;\n    setTimeout(() => {\n      // Check if the two flipped cards are a match\n      if (flippedCards[0].dataset.index === flippedCards[1].dataset.index) {\n        flippedCards.forEach(card => card.classList.add('matched'));\n        playerApi.sendEvent('found_pair', { index: flippedCards[0].dataset.index });\n      } else {\n        flippedCards.forEach(card => card.classList.remove('flipped'));\n      }\n      flippedCards = [];\n      disableClick = false;\n    }, 1000);\n  }\n}\n\n// Function to handle method calls from the task\nplayerApi.callTemplateScript = (method, details) => {\n  if (method === 'createLayout') {\n    return createLayout(details);\n  }\n};\n\n/*\nUsage Instructions:\n- This template is designed for memory games.\n- The task should call the 'createLayout' method to initialize the layout.\n- The details object passed to 'createLayout' should include:\n  - 'list1': The first list of elements to be displayed on the cards.\n  - 'list2': The second list of elements to be displayed on the cards. The combined length of both lists must be the same.\n- The cards are displayed in a grid with 4 cards per row.\n- The 'questionElement' is a div above the memory grid where instructions or questions can be displayed.\n- When a card is clicked, it flips to reveal its value.\n- When two cards are flipped, clicking is disabled for one second. If the cards match, they are highlighted in light green and an event 'found_pair' is sent with the index of the pair.\n- The task can communicate with the template by calling 'playerApi.callTemplateScript'.\n*/"
}
