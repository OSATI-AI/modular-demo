{
    "template_id": "template_fraction_input",
    "title": "Fraction Input Template",
    "example_task": "task_fraction_input_dynamic",
    "description": "A template designed for tasks that require a question, an optional image, and a fraction input interface. The layout consists of a question element, an optional image placeholder, and two input fields for the numerator and denominator of a fraction with a division line between them.",
    "events": {
      "send": [],
      "receive": []
    },
    "html": "<div class='content-container'>\n  <div class='task-container'>\n    <div id='question' class='question'></div>\n    <div id='image_placeholder' class='image-placeholder'></div>\n    <div class='fraction-input-container'>\n      <input type='text' id='numerator' class='fraction-input'>\n      <div class='fraction-line'></div>\n      <input type='text' id='denominator' class='fraction-input'>\n    </div>\n  </div>\n</div>",
    "styles": ".content-container {\n  display: flex;\n  justify-content: flex-start;\n  padding: 20px;\n}\n.task-container {\n  display: flex;\n  flex-direction: column;\n  align-items: flex-start;\n}\n.question {\n  font-size: 20px;\n  margin-bottom: 10px;\n}\n.image-placeholder {\n  margin-bottom: 10px;\n}\n.fraction-input-container {\n  display: flex;\n  flex-direction: column;\n  align-items: flex-start;\n}\n.fraction-input {\n  width: 80px;\n  height: 40px;\n  text-align: center;\n  margin: 5px 0;\n  border: 2px solid #ccc;\n  border-radius: 10px;\n  font-size: 20px;\n}\n.fraction-line {\n  width: 80px;\n  height: 2px;\n  background-color: black;\n}",
    "scripts": "function createLayout(details) {\n  const questionElement = document.getElementById('question');\n  const imagePlaceholder = document.getElementById('image_placeholder');\n  const numeratorInput = document.getElementById('numerator');\n  const denominatorInput = document.getElementById('denominator');\n\n  return { questionElement, imagePlaceholder, numeratorInput, denominatorInput };\n}\n\nplayerApi.callTemplateScript = (method, details) => {\n  if (method === 'createLayout') {\n    return createLayout(details);\n  }\n};\n\n/*\nUsage Instructions:\n- This template is designed for tasks that require a question, an optional image, and a fraction input interface.\n- The task should call the 'createLayout' method to initialize the layout.\n- The details object passed to 'createLayout' should include the necessary data for setting up the question and the fraction input fields.\n- The image placeholder can be left blank if no image is needed by the task.\n- If an image is needed, the task should manipulate the image placeholder element directly to set the image URL.\n\nExample Task Setup:\n- The task calls `playerApi.callTemplateScript('createLayout', details);` where `details` includes:\n  - `question`: The question text to be displayed.\n  - `numerator`: The numerator input value (if needed for pre-fill).\n  - `denominator`: The denominator input value (if needed for pre-fill).\n- If an image is needed, the task can manipulate the image placeholder element:\n  - `const imagePlaceholder = document.getElementById('image_placeholder');`\n  - `imagePlaceholder.innerHTML = '<img src=\"/path/to/image.png\" alt=\"Description of image\">';`\n*/"
  }
  